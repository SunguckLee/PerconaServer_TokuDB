--source include/have_innodb.inc

--disable_warnings
DROP TABLE IF EXISTS t1, t2, t3;
--enable_warnings

--echo # Checking variables
SHOW VARIABLES LIKE 'innodb_fake_changes';
SELECT VARIABLE_VALUE FROM INFORMATION_SCHEMA.SESSION_VARIABLES WHERE VARIABLE_NAME='innodb_fake_changes';
SET innodb_fake_changes=1;
SHOW VARIABLES LIKE 'innodb_fake_changes';
SELECT VARIABLE_VALUE FROM INFORMATION_SCHEMA.SESSION_VARIABLES WHERE VARIABLE_NAME='innodb_fake_changes';
SET innodb_fake_changes=default;
SHOW VARIABLES LIKE 'innodb_fake_changes';
SELECT VARIABLE_VALUE FROM INFORMATION_SCHEMA.SESSION_VARIABLES WHERE VARIABLE_NAME='innodb_fake_changes';

--echo # Explicit COMMIT should fail when innodb_fake_changes is enabled
--echo # DML should be fine
SET @@GLOBAL.userstat=TRUE;
SET @@GLOBAL.innodb_stats_transient_sample_pages=30000;

CREATE TABLE t1 (a INT) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);

--let $fake_changes_table=t1
--source include/start_fake_changes.inc

BEGIN;
INSERT INTO t1 VALUES (2);
UPDATE t1 SET a=0;
DELETE FROM t1 LIMIT 1;
SELECT * FROM t1;
--error 1180
COMMIT;

--source include/stop_fake_changes.inc

DROP TABLE t1;

#
# Test primary and secondary index access
#
CREATE TABLE t1 (a INT PRIMARY KEY, b INT, UNIQUE KEY (b)) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1,1);

--source include/start_fake_changes.inc

# Test with autocommit
--error ER_ERROR_DURING_COMMIT
SELECT * FROM t1;
--error ER_ERROR_DURING_COMMIT
INSERT INTO t1 VALUES (2,2);
--error ER_DUP_ENTRY
UPDATE t1 SET a=0 where b=1;
--error ER_ERROR_DURING_COMMIT
UPDATE t1 SET b=0 where a=1;
--error ER_ERROR_DURING_COMMIT
UPDATE t1 SET b=0 where a=2;
--error ER_ERROR_DURING_COMMIT
DELETE FROM t1 where b=2;
--error ER_ERROR_DURING_COMMIT
DELETE FROM t1 where b=1;
--error ER_ERROR_DURING_COMMIT
DELETE FROM t1 where a=2;
--error ER_ERROR_DURING_COMMIT
DELETE FROM t1 where a=1;
--error ER_ERROR_DURING_COMMIT
REPLACE INTO t1 values (2,3);

# Test with transactions
BEGIN;
SELECT * FROM t1;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
INSERT INTO t1 VALUES (2,2);
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
--error ER_DUP_ENTRY
UPDATE t1 SET a=0 where b=1;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
UPDATE t1 SET b=0 where a=1;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
UPDATE t1 SET b=0 where a=2;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
DELETE FROM t1 where b=2;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
DELETE FROM t1 where b=1;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
DELETE FROM t1 where a=2;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
DELETE FROM t1 where a=1;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
REPLACE INTO t1 values (2,3);
--error ER_ERROR_DURING_COMMIT
COMMIT;

--error ER_ERROR_DURING_COMMIT
INSERT INTO t1 VALUES (1,1) ON DUPLICATE KEY UPDATE b=2;
--error ER_ERROR_DURING_COMMIT
CREATE INDEX bx ON t1(b);

--source include/stop_fake_changes.inc

DROP TABLE t1;

#
# Test all accesses through the primary index
#
CREATE TABLE t2 (a INT PRIMARY KEY, b INT) ENGINE=InnoDB;
INSERT INTO t2 VALUES (1, 1);

--let $fake_changes_table=t2
--source include/start_fake_changes.inc

# Test with autocommit
--error ER_ERROR_DURING_COMMIT
SELECT * FROM t2;
--error ER_ERROR_DURING_COMMIT
INSERT INTO t2 VALUES (2,2);
--error ER_ERROR_DURING_COMMIT
UPDATE t2 SET b=0 where a=1;
--error ER_ERROR_DURING_COMMIT
UPDATE t2 SET b=0 where a=2;
--error ER_ERROR_DURING_COMMIT
DELETE FROM t2 where b=2;
--error ER_ERROR_DURING_COMMIT
DELETE FROM t2 where b=1;
--error ER_ERROR_DURING_COMMIT
DELETE FROM t2 where a=2;
--error ER_ERROR_DURING_COMMIT
DELETE FROM t2 where a=1;
--error ER_ERROR_DURING_COMMIT
REPLACE INTO t2 values (2,3);
--error ER_ERROR_DURING_COMMIT
REPLACE INTO t2 VALUES (1,1);
--error ER_ERROR_DURING_COMMIT
REPLACE INTO t2 VALUES (1,2);

# Test with transactions
BEGIN;
SELECT * FROM t2;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
INSERT INTO t2 VALUES (2,2);
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
UPDATE t2 SET b=0 where a=1;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
UPDATE t2 SET b=0 where a=2;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
DELETE FROM t2 where b=2;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
DELETE FROM t2 where b=1;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
DELETE FROM t2 where a=2;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
DELETE FROM t2 where a=1;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
REPLACE INTO t2 values (2,3);
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
REPLACE INTO t2 VALUES (1,1);
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
REPLACE INTO t2 VALUES (1,2);
--error ER_ERROR_DURING_COMMIT
COMMIT;

# Confirm that duplicate key errors are OK
BEGIN;
REPLACE INTO t2 VALUES (1,2);
SELECT * from t2;
REPLACE INTO t2 VALUES (1,1);
SELECT * from t2;
ROLLBACK;

BEGIN;
--error ER_DUP_ENTRY
INSERT INTO t2 VALUES (1,1);
--error ER_DUP_ENTRY
INSERT INTO t2 VALUES (1,2);
ROLLBACK;

--error ER_ERROR_DURING_COMMIT
INSERT INTO t2 VALUES (1,1) ON DUPLICATE KEY UPDATE b=2;
--error ER_ERROR_DURING_COMMIT
INSERT INTO t2 VALUES (1,1) ON DUPLICATE KEY UPDATE b=b+10;
--error ER_ERROR_DURING_COMMIT
INSERT INTO t2 VALUES (1,2) ON DUPLICATE KEY UPDATE b=b+10;
--error ER_ERROR_DURING_COMMIT
CREATE INDEX bx ON t2(b);

--source include/stop_fake_changes.inc

DROP TABLE t2;

#
# Test TEXT
#
CREATE TABLE t3 (a INT PRIMARY KEY, B TEXT) ENGINE=InnoDB;
INSERT INTO t3 VALUES (1, '');

--let $fake_changes_table=t3
--source include/start_fake_changes.inc

# Test with autocommit
--error ER_ERROR_DURING_COMMIT
SELECT * FROM t3;
--error ER_ERROR_DURING_COMMIT
INSERT INTO t3 VALUES (2,lpad('a',10000, 'b'));
--error ER_ERROR_DURING_COMMIT
UPDATE t3 SET a=0 where a=1;
--error ER_ERROR_DURING_COMMIT
DELETE FROM t3 where a=2;
--error ER_ERROR_DURING_COMMIT
DELETE FROM t3 where a=1;
--error ER_ERROR_DURING_COMMIT
REPLACE INTO t3 values (2,lpad('a',9000,'q'));
--error ER_ERROR_DURING_COMMIT
INSERT INTO t3 VALUES (1,1) ON DUPLICATE KEY UPDATE b=lpad('b',11000,'c');

# Test with transactions
BEGIN;
SELECT * FROM t3;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
INSERT INTO t3 VALUES (2,lpad('a',10000, 'b'));
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
UPDATE t3 SET a=0 where a=1;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
DELETE FROM t3 where a=2;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
DELETE FROM t3 where a=1;
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
REPLACE INTO t3 values (2,lpad('a',9000,'q'));
--error ER_ERROR_DURING_COMMIT
COMMIT;

BEGIN;
INSERT INTO t3 VALUES (1,1) ON DUPLICATE KEY UPDATE b=lpad('b',11000,'c');
--error ER_ERROR_DURING_COMMIT
COMMIT;

--source include/stop_fake_changes.inc

DROP TABLE t3;

--echo # DDL must result in error
CREATE TABLE t1 (a INT PRIMARY KEY) ENGINE=InnoDB;

--let $fake_changes_table=t1
--source include/start_fake_changes.inc

BEGIN;
--error ER_ILLEGAL_HA
CREATE TABLE t2 (a INT) ENGINE=InnoDB;
--error 1051
DROP TABLE t1;
--error 1031
TRUNCATE TABLE t1;
--error 1180
ALTER TABLE t1 ENGINE=MyISAM;
ROLLBACK;

--source include/stop_fake_changes.inc

# Test stat counters foreign key constraints
INSERT INTO t1 VALUES (1), (2);

CREATE TABLE t2 (a INT PRIMARY KEY, b INT, INDEX b_ind (b),
       FOREIGN KEY (b) REFERENCES t1(a) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
INSERT INTO t2 VALUES (1, 1);
INSERT INTO t2 VALUES (2, 2);
COMMIT;

--let $fake_changes_table=t1
--source include/start_fake_changes.inc

BEGIN;
DELETE FROM t1 WHERE a=1;
UPDATE t1 SET a=3 WHERE a=2;
--error 1180
COMMIT;

--source include/stop_fake_changes.inc

DROP TABLE t2;

# Test for bug 890404: uninitialized value warning in btr_cur_pessimistic_update
CREATE TABLE t3 (a INT primary key, b text) ENGINE=InnoDB;
INSERT INTO t3 VALUES (1,'');
let $t3_checksum_1= `CHECKSUM TABLE t3 EXTENDED`;

--let $fake_changes_table=t3
--source include/start_fake_changes.inc

BEGIN;
UPDATE t3 set b=lpad('b',11000,'c') where a=1;
--error ER_ERROR_DURING_COMMIT
COMMIT;

--source include/stop_fake_changes.inc

DROP TABLE t1, t3;

SET @@GLOBAL.userstat= default;
SET @@GLOBAL.innodb_stats_transient_sample_pages=default;
