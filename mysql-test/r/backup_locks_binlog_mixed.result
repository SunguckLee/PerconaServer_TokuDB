SET @old_binlog_format=@@binlog_format;
SET GLOBAL binlog_format='MIXED';
SET SESSION binlog_format='MIXED';
SELECT @@binlog_format;
@@binlog_format
MIXED
RESET MASTER;
SHOW VARIABLES LIKE 'have_backup_locks';
Variable_name	Value
have_backup_locks	YES
#-----------------------------------------------------------------------
# Setup
#-----------------------------------------------------------------------
CREATE TABLE t_innodb(a INT NOT NULL, KEY (a)) ENGINE=InnoDB;
CREATE TABLE t_myisam(a INT NOT NULL, KEY (a)) ENGINE=MyISAM;
CREATE TABLE t_memory(a INT NOT NULL, KEY (a)) ENGINE=MEMORY;
CREATE TABLE t_csv(a INT NOT NULL) ENGINE=CSV;
CREATE TABLE t_blackhole(a INT NOT NULL, KEY (a)) ENGINE=BLACKHOLE;
CREATE TABLE t_archive(a INT NOT NULL) ENGINE=ARCHIVE;
CREATE VIEW v_innodb AS SELECT * FROM t_innodb;
CREATE VIEW v_myisam AS SELECT * FROM t_myisam;
CREATE VIEW v_memory AS SELECT * FROM t_memory;
CREATE VIEW v_csv AS SELECT * FROM t_csv;
CREATE VIEW v_blackhole AS SELECT * FROM t_blackhole;
CREATE VIEW v_archive AS SELECT * FROM t_archive;
#-----------------------------------------------------------------------
# Single-threaded tests
#-----------------------------------------------------------------------
LOCK BINLOG FOR BACKUP;
DELETE FROM t_innodb;
INSERT INTO t_innodb VALUES(0);
UPDATE t_innodb SET a = 1;
REPLACE INTO t_innodb VALUES(1);
SELECT * from t_innodb;
a
1
1
HANDLER t_innodb OPEN;
HANDLER t_innodb READ a FIRST;
a
1
HANDLER t_innodb CLOSE;
DELETE FROM t_myisam;
INSERT INTO t_myisam VALUES(0);
UPDATE t_myisam SET a = 1;
REPLACE INTO t_myisam VALUES(1);
SELECT * from t_myisam;
a
1
1
HANDLER t_myisam OPEN;
HANDLER t_myisam READ a FIRST;
a
1
HANDLER t_myisam CLOSE;
DELETE FROM t_memory;
INSERT INTO t_memory VALUES(0);
UPDATE t_memory SET a = 1;
REPLACE INTO t_memory VALUES(1);
SELECT * from t_memory;
a
1
1
DELETE FROM t_archive;
INSERT INTO t_archive VALUES(0);
SELECT * from t_archive;
a
0
DELETE FROM t_csv;
INSERT INTO t_csv VALUES(0);
UPDATE t_csv SET a = 1;
REPLACE INTO t_csv VALUES(1);
SELECT * from t_csv;
a
1
1
DELETE FROM t_blackhole;
INSERT INTO t_blackhole VALUES(0);
UPDATE t_blackhole SET a = 1;
REPLACE INTO t_blackhole VALUES(1);
SELECT * from t_blackhole;
a
CREATE TABLE tt_innodb(a INT NOT NULL) ENGINE=InnoDB;
CREATE TABLE tt_myisam(a INT NOT NULL) ENGINE=MyISAM;
CREATE TABLE tt_memory(a INT NOT NULL) ENGINE=MEMORY;
CREATE TABLE tt_csv(a INT NOT NULL) ENGINE=CSV;
CREATE TABLE tt_blackhole(a INT NOT NULL) ENGINE=BLACKHOLE;
CREATE TABLE tt_archive(a INT NOT NULL) ENGINE=ARCHIVE;
DROP TABLE tt_innodb;
DROP TABLE tt_myisam;
DROP TABLE tt_memory;
DROP TABLE tt_csv;
DROP TABLE tt_blackhole;
DROP TABLE tt_archive;
DROP TABLE non_existing;
ERROR 42S02: Unknown table 'test.non_existing'
TRUNCATE TABLE t_innodb;
TRUNCATE TABLE t_myisam;
TRUNCATE TABLE t_memory;
TRUNCATE TABLE t_csv;
TRUNCATE TABLE t_blackhole;
RENAME TABLE t_innodb TO tmp, tmp TO t_innodb;
RENAME TABLE t_myisam TO tmp, tmp TO t_myisam;
RENAME TABLE t_memory TO tmp, tmp TO t_memory;
RENAME TABLE t_csv TO tmp, tmp TO t_csv;
RENAME TABLE t_blackhole TO tmp, tmp TO t_blackhole;
RENAME TABLE t_archive TO tmp, tmp TO t_archive;
ALTER TABLE t_innodb ADD COLUMN b CHAR(10) NOT NULL;
ALTER TABLE t_innodb DROP COLUMN b;
ALTER TABLE t_myisam ADD COLUMN b CHAR(10) NOT NULL;
ALTER TABLE t_myisam DROP COLUMN b;
ALTER TABLE t_memory ADD COLUMN b CHAR(10) NOT NULL;
ALTER TABLE t_memory DROP COLUMN b;
ALTER TABLE t_csv ADD COLUMN b CHAR(10) NOT NULL;
ALTER TABLE t_csv DROP COLUMN b;
ALTER TABLE t_blackhole ADD COLUMN b CHAR(10) NOT NULL;
ALTER TABLE t_blackhole DROP COLUMN b;
ALTER TABLE t_archive ADD COLUMN b CHAR(10) NOT NULL;
ALTER TABLE t_archive DROP COLUMN b;
ALTER TABLE t_innodb ADD KEY tmp (a);
Warnings:
Note	1831	Duplicate index 'tmp' defined on the table 'test.t_innodb'. This is deprecated and will be disallowed in a future release.
ALTER TABLE t_innodb DROP KEY tmp;
ALTER TABLE t_myisam ADD KEY tmp (a);
Warnings:
Note	1831	Duplicate index 'tmp' defined on the table 'test.t_myisam'. This is deprecated and will be disallowed in a future release.
ALTER TABLE t_myisam DROP KEY tmp;
ALTER TABLE t_memory ADD KEY tmp (a);
Warnings:
Note	1831	Duplicate index 'tmp' defined on the table 'test.t_memory'. This is deprecated and will be disallowed in a future release.
ALTER TABLE t_memory DROP KEY tmp;
ALTER TABLE t_blackhole ADD KEY tmp (a);
Warnings:
Note	1831	Duplicate index 'tmp' defined on the table 'test.t_blackhole'. This is deprecated and will be disallowed in a future release.
ALTER TABLE t_blackhole DROP KEY tmp;
CREATE DATABASE test1;
DROP DATABASE test1;
CREATE PROCEDURE p1()
BEGIN
SELECT 1;
END|
DROP PROCEDURE p1|
CREATE FUNCTION f1() RETURNS INT DETERMINISTIC
BEGIN
RETURN 1;
END|
DROP FUNCTION f1|
CREATE VIEW v1 AS SELECT * FROM t_innodb;
DROP VIEW v1;
INSERT INTO v_innodb VALUES(1);
INSERT INTO v_blackhole VALUES(1);
INSERT INTO v_myisam VALUES(1);
INSERT INTO v_csv VALUES(1);
INSERT INTO v_memory VALUES(1);
INSERT INTO v_archive VALUES(1);
UNLOCK BINLOG;
SELECT @@delay_key_write;
@@delay_key_write
ON
SET GLOBAL delay_key_write=ALL;
LOCK TABLES FOR BACKUP;
ERROR HY000: The MySQL server is running with the delay_key_write=ALL option so it cannot execute this statement
SET GLOBAL delay_key_write=default;
SELECT @@delay_key_write;
@@delay_key_write
ON
SET GLOBAL read_only=1;
INSERT INTO t_innodb VALUES(0);
INSERT INTO t_myisam VALUES(0);
LOCK TABLES FOR BACKUP;
INSERT INTO t_innodb VALUES(0);
INSERT INTO t_myisam VALUES(0);
ERROR HY000: Can't execute the query because you have a conflicting backup lock
UNLOCK TABLES;
INSERT INTO t_innodb VALUES(0);
INSERT INTO t_myisam VALUES(0);
SET GLOBAL read_only=0;
LOCK TABLES FOR BACKUP;
CREATE TEMPORARY TABLE tt_innodb(a INT NOT NULL) ENGINE=InnoDB;
CREATE TEMPORARY TABLE tt_myisam(a INT NOT NULL) ENGINE=MyISAM;
CREATE TEMPORARY TABLE tt_memory(a INT NOT NULL) ENGINE=MEMORY;
CREATE TEMPORARY TABLE tt_csv(a INT NOT NULL) ENGINE=CSV;
CREATE TEMPORARY TABLE tt_blackhole(a INT NOT NULL) ENGINE=BLACKHOLE;
CREATE TEMPORARY TABLE tt_archive(a INT NOT NULL) ENGINE=ARCHIVE;
INSERT INTO tt_innodb VALUES(5);
INSERT INTO tt_myisam VALUES(5);
INSERT INTO tt_memory VALUES(5);
INSERT INTO tt_csv VALUES(5);
INSERT INTO tt_blackhole VALUES(5);
INSERT INTO tt_archive VALUES(5);
LOCK BINLOG FOR BACKUP;
START TRANSACTION;
SELECT * FROM tt_archive;
a
5
SELECT * FROM tt_blackhole;
a
SELECT * FROM tt_memory;
a
5
SELECT * FROM tt_innodb;
a
5
SELECT * FROM tt_myisam;
a
5
INSERT INTO tt_innodb VALUES(6);
INSERT INTO tt_myisam VALUES(6);
INSERT INTO tt_memory VALUES(6);
INSERT INTO tt_csv VALUES(6);
INSERT INTO tt_blackhole VALUES(6);
INSERT INTO tt_archive VALUES(6);
COMMIT;
SELECT * FROM tt_archive;
a
5
6
SELECT * FROM tt_blackhole;
a
SELECT * FROM tt_memory;
a
5
6
SELECT * FROM tt_innodb;
a
5
6
SELECT * FROM tt_myisam;
a
5
6
DROP TEMPORARY TABLE tt_innodb;
DROP TEMPORARY TABLE tt_myisam;
DROP TEMPORARY TABLE tt_memory;
DROP TEMPORARY TABLE tt_csv;
DROP TEMPORARY TABLE tt_blackhole;
DROP TEMPORARY TABLE tt_archive;
UNLOCK BINLOG;
UNLOCK TABLES;
SELECT @@log_bin;
@@log_bin
1
LOCK BINLOG FOR BACKUP;
INSERT INTO t_innodb VALUES(1);
INSERT INTO t_myisam VALUES(1);
UNLOCK BINLOG;
SET @old_general_log = @@general_log;
SET @old_slow_query_log = @@slow_query_log;
SET @old_log_output = @@log_output;
SET @old_long_query_time = @@SESSION.long_query_time;
SET SESSION long_query_time = 0;
SET GLOBAL log_output = 'TABLE';
SET GLOBAL general_log = ON;
SET GLOBAL slow_query_log = ON;
LOCK TABLES FOR BACKUP;
SELECT 1;
1
1
LOCK BINLOG FOR BACKUP;
SELECT 1;
1
1
UNLOCK BINLOG;
UNLOCK TABLES;
SET SESSION long_query_time = @old_long_query_time;
SET GLOBAL log_output = @old_log_output;
SET GLOBAL slow_query_log = @old_slow_query_log;
SET GLOBAL general_log = @old_general_log;
#-----------------------------------------------------------------------
# Multi-threaded tests
#-----------------------------------------------------------------------
# connection default
CREATE USER user@localhost;
GRANT ALL PRIVILEGES ON test.* TO user@localhost;
LOCK TABLES FOR BACKUP;
# connection con1
SET SESSION lock_wait_timeout = 1;
SET GLOBAL delay_key_write=ALL;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SET SESSION lock_wait_timeout = DEFAULT;
# connection default
UNLOCK TABLES;
# connection con2
START TRANSACTION;
INSERT INTO t_innodb VALUES(0);
# connection default
SET GLOBAL read_only=1;
# connection con2
COMMIT;
ERROR HY000: The MySQL server is running with the --read-only option so it cannot execute this statement
INSERT INTO t_innodb VALUES(0);
ERROR HY000: The MySQL server is running with the --read-only option so it cannot execute this statement
INSERT INTO t_myisam VALUES(0);
ERROR HY000: The MySQL server is running with the --read-only option so it cannot execute this statement
# connection con1
LOCK TABLES FOR BACKUP;
# connection con2
INSERT INTO t_innodb VALUES(0);
ERROR HY000: The MySQL server is running with the --read-only option so it cannot execute this statement
INSERT INTO t_myisam VALUES(0);
ERROR HY000: The MySQL server is running with the --read-only option so it cannot execute this statement
# connection default
SET GLOBAL read_only=0;
# connection con2
SET SESSION lock_wait_timeout = 1;
INSERT INTO t_innodb VALUES(0);
INSERT INTO t_myisam VALUES(0);
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SET SESSION lock_wait_timeout = 0;
Warnings:
Warning	1292	Truncated incorrect lock_wait_timeout value: '0'
# connection default
SET GLOBAL read_only=1;
# connection con2
INSERT INTO t_innodb VALUES(0);
ERROR HY000: The MySQL server is running with the --read-only option so it cannot execute this statement
INSERT INTO t_myisam VALUES(0);
ERROR HY000: The MySQL server is running with the --read-only option so it cannot execute this statement
# connection con1
UNLOCK TABLES;
# connection con2
INSERT INTO t_innodb VALUES(0);
ERROR HY000: The MySQL server is running with the --read-only option so it cannot execute this statement
INSERT INTO t_myisam VALUES(0);
ERROR HY000: The MySQL server is running with the --read-only option so it cannot execute this statement
# connection default
SET GLOBAL read_only=0;
# connection default
LOCK TABLES FOR BACKUP;
# connection con1
CREATE TEMPORARY TABLE tt_innodb(a INT NOT NULL) ENGINE=InnoDB;
CREATE TEMPORARY TABLE tt_myisam(a INT NOT NULL) ENGINE=MyISAM;
CREATE TEMPORARY TABLE tt_memory(a INT NOT NULL) ENGINE=MEMORY;
CREATE TEMPORARY TABLE tt_csv(a INT NOT NULL) ENGINE=CSV;
CREATE TEMPORARY TABLE tt_blackhole(a INT NOT NULL) ENGINE=BLACKHOLE;
CREATE TEMPORARY TABLE tt_archive(a INT NOT NULL) ENGINE=ARCHIVE;
INSERT INTO tt_innodb VALUES(5);
INSERT INTO tt_myisam VALUES(5);
INSERT INTO tt_memory VALUES(5);
INSERT INTO tt_csv VALUES(5);
INSERT INTO tt_blackhole VALUES(5);
INSERT INTO tt_archive VALUES(5);
# connection default
LOCK BINLOG FOR BACKUP;
# connection con1
SET SESSION lock_wait_timeout = 1;
START TRANSACTION;
INSERT INTO tt_myisam VALUES(6);
INSERT INTO tt_innodb VALUES(6);
SELECT * FROM tt_archive;
a
5
SELECT * FROM tt_blackhole;
a
SELECT * FROM tt_memory;
a
5
SELECT * FROM tt_innodb;
a
5
6
SELECT * FROM tt_myisam;
a
5
6
SELECT * FROM tt_csv;
a
5
# connection default
must_be_1
1
UNLOCK BINLOG;
UNLOCK TABLES;
# connection con1
COMMIT;
DROP TEMPORARY TABLE tt_innodb;
DROP TEMPORARY TABLE tt_myisam;
DROP TEMPORARY TABLE tt_memory;
DROP TEMPORARY TABLE tt_csv;
DROP TEMPORARY TABLE tt_blackhole;
DROP TEMPORARY TABLE tt_archive;
# connection default
LOCK BINLOG FOR BACKUP;
# connection con1
SET SESSION lock_wait_timeout = 1;
INSERT INTO t_innodb VALUES(1);
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
INSERT INTO t_myisam VALUES(1);
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SET SESSION lock_wait_timeout = DEFAULT;
# connection default
must_be_1
1
UNLOCK BINLOG;
# connection default
LOCK BINLOG FOR BACKUP;
# connection con1
SET SESSION lock_wait_timeout = 1;
DELETE FROM t_innodb;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
INSERT INTO t_innodb VALUES(0);
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
UPDATE t_innodb SET a = 1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
REPLACE INTO t_innodb VALUES(1);
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SELECT * from t_innodb;
a
0
0
0
0
1
1
HANDLER t_innodb OPEN;
HANDLER t_innodb READ a FIRST;
a
0
HANDLER t_innodb CLOSE;
START TRANSACTION;
SELECT * from t_innodb;
a
0
0
0
0
1
1
DELETE FROM t_innodb;
INSERT INTO t_innodb VALUES(0);
UPDATE t_innodb SET a = 1;
REPLACE INTO t_innodb VALUES(1);
COMMIT;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SELECT * FROM t_innodb;
a
0
0
0
0
1
1
COMMIT;
START TRANSACTION;
INSERT INTO t_myisam VALUES(1);
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
COMMIT;
INSERT INTO t_myisam VALUES(0);
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
UPDATE t_myisam SET a = 1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SELECT * FROM t_myisam;
a
1
1
1
1
1
1
1
HANDLER t_myisam OPEN;
HANDLER t_myisam READ a FIRST;
a
1
HANDLER t_myisam CLOSE;
DELETE FROM t_blackhole;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
INSERT INTO t_blackhole VALUES(0);
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
UPDATE t_blackhole SET a = 1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
REPLACE INTO t_blackhole VALUES(1);
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SELECT * FROM t_blackhole;
a
CREATE TABLE tt_innodb(a INT NOT NULL) ENGINE=InnoDB;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
DROP TABLE tt_innodb;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
DROP TABLE non_existing;
ERROR 42S02: Unknown table 'test.non_existing'
CREATE TABLE t_innodb(a INT NOT NULL) ENGINE=InnoDB;
ERROR 42S01: Table 't_innodb' already exists
TRUNCATE TABLE t_innodb;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
RENAME TABLE t_innodb TO tmp, tmp to t_innodb;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
ALTER TABLE t_innodb ADD COLUMN b CHAR(10);
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
ALTER TABLE t_innodb ADD KEY (a);
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
CREATE DATABASE test1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
DROP DATABASE test1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
CREATE PROCEDURE p1() SELECT 1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
DROP PROCEDURE p1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
CREATE VIEW v1 AS SELECT * FROM t_innodb;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
DROP VIEW v1;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
INSERT INTO v_innodb VALUES(1);
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
# connection default
must_be_1
1
UNLOCK BINLOG;
# connection con1
SHOW CREATE TABLE t_innodb;
Table	Create Table
t_innodb	CREATE TABLE `t_innodb` (
  `a` int(11) NOT NULL,
  `b` char(10) DEFAULT NULL,
  KEY `a` (`a`),
  KEY `a_2` (`a`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1
DROP TABLE t_innodb;
CREATE TABLE t_innodb(a INT NOT NULL) ENGINE=InnoDB;
# connection default
LOCK BINLOG FOR BACKUP;
# connection con1
INSERT DELAYED INTO t_myisam VALUES(0);
Warnings:
Warning	1287	'INSERT DELAYED' is deprecated and will be removed in a future release. Please use INSERT instead
# connection default
must_be_1
1
UNLOCK BINLOG;
SELECT * FROm t_myisam;
a
0
1
1
1
1
1
1
1
SET @old_general_log = @@general_log;
SET @old_slow_query_log = @@slow_query_log;
SET @old_log_output = @@log_output;
SET GLOBAL log_output = 'TABLE';
SET GLOBAL general_log = ON;
SET GLOBAL slow_query_log = ON;
LOCK BINLOG FOR BACKUP;
# connection con1
SET @old_long_query_time = @@SESSION.long_query_time;
SET SESSION long_query_time = 0;
SELECT 1;
1
1
# connection default
SELECT 1;
1
1
# connection con1
SET SESSION long_query_time = @old_long_query_time;
# connection default
must_be_1
1
UNLOCK BINLOG;
SET GLOBAL log_output = @old_log_output;
SET GLOBAL slow_query_log = @old_slow_query_log;
SET GLOBAL general_log = @old_general_log;
#-----------------------------------------------------------------------
# Cleanup
#-----------------------------------------------------------------------
DROP USER user@localhost;
DROP VIEW v_innodb, v_myisam, v_memory, v_csv, v_blackhole, v_archive;
DROP TABLE t_innodb, t_myisam, t_memory, t_csv, t_blackhole, t_archive;
SET GLOBAL binlog_format = @old_binlog_format;
