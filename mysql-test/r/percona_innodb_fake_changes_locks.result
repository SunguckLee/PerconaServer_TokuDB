DROP TABLE IF EXISTS t1, t2;
CREATE TABLE t1 (a INT PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);
CREATE TABLE t2 (a INT PRIMARY KEY, b INT) ENGINE=InnoDB;
INSERT INTO t2 VALUES (1, 1);
# Verifying that X_LOCK not acquired
SET autocommit=0;
SET innodb_fake_changes=1;
BEGIN;
SELECT * FROM t1 FOR UPDATE;
a
1
SET innodb_lock_wait_timeout=3;
UPDATE t1 SET a=2;
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
SELECT * FROM t1 LOCK IN SHARE MODE;
a
1
ROLLBACK;
# Confirm no lock wait timeouts when innodb_locking_fake_changes=0
SET GLOBAL innodb_locking_fake_changes=0;
BEGIN;
SELECT * FROM t1 FOR UPDATE;
a
1
BEGIN;
UPDATE t1 SET a=3 WHERE a=1;
SELECT * FROM t1 LOCK IN SHARE MODE;
a
3
ROLLBACK;
ROLLBACK;
# Confirm that fake UPDATE does not hold a lock
BEGIN;
SELECT * FROM t1 FOR UPDATE;
a
1
BEGIN;
UPDATE t1 SET a=3 WHERE a=1;
ROLLBACK;
ROLLBACK;
BEGIN;
UPDATE t1 SET a=3 WHERE a=1;
BEGIN;
UPDATE t1 SET a=3 WHERE a=1;
ROLLBACK;
ROLLBACK;
# Confirm that fake INSERT does not hold a lock
BEGIN;
INSERT INTO t1 VALUES(4);
BEGIN;
INSERT INTO t1 VALUES(4);
ROLLBACK;
ROLLBACK;
# Confirm that fake DELETE does not hold a lock
BEGIN;
DELETE FROM t1 WHERE a=1;
BEGIN;
DELETE FROM t1 WHERE a=1;
ROLLBACK;
ROLLBACK;
# Confirm that fake REPLACE does not hold a lock
BEGIN;
REPLACE INTO t2 VALUES(1, 2);
BEGIN;
REPLACE INTO t2 VALUES(1, 2);
ROLLBACK;
ROLLBACK;
SET innodb_fake_changes=default;
SET GLOBAL innodb_locking_fake_changes=default;
# Verify that the fake changes to t1 did not leak through
CHECK TABLE t1;
Table	Op	Msg_type	Msg_text
test.t1	check	status	OK
should_be_1
1
# Verify that the fake changes to t2 did not leak through
CHECK TABLE t2;
Table	Op	Msg_type	Msg_text
test.t2	check	status	OK
should_be_1
1
DROP TABLE t1, t2;
